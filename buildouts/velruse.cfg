# NOTE: velruse has been tested under the following constraints:
#
#  1. velruse paster, adhocracy paster, and apache proxy are running on localhost
#
#  2. the adhocracy domain maps to the ip address of the apache proxy
#
#  3. [facebook sso only; other ssos have not been tested] the
#     adhocracy domain is added under the app key under
#     developer.facebook.com/apps

[buildout]
eggs +=
    velruse
velruse-supervisor =
    0 velruse (environment=${supervisor:environment} redirect_stderr=true stdout_logfile=var/log/velruse.log stderr_logfile=NONE) ${buildout:bin-directory}/paster [serve ${buildout:directory}/etc/velruse.ini]
parts +=
    velruse
    velruse_conf

[domains]
velruse = ${domains:main}

[ports]
# the port on which the velruse backend is listening.
velruse = 5028

# the port on which a possible proxy server accepts connections (http or https) and
# forwards them to the velruse backend.  This must be different from
# ${ports:velruse} as long as both are running on the same host / domain!
# If no proxy is used this should be identical to ${ports:velruse}.
velruse_proxy = ${ports:velruse}

[velruse]
recipe = zc.recipe.egg
eggs = velruse
host = ${adhocracy:host}
domain = ${domains:velruse}
port = ${ports:velruse}
protocol = http
proxy_protocol = ${velruse:protocol}
debug = False

redis_host = ${domains:redis}
redis_port = ${ports:redis}
redis_db = 0
redis_prefix = velruse_ustore

# initialize instance- and application-specific credentials here.
# facebook and twitter are registered with velruse automatically; for
# any other SSO service providers, you need to extend section
# [app:velruse] in ../etc/velruse.ini.in.
facebook_app_key     = add_facebook_app_key_and_secret_to_buildout
facebook_app_secret  = add_facebook_app_key_and_secret_to_buildout
twitter_app_key      = add_twitter_app_key_and_secret_to_buildout
twitter_app_secret   = add_twitter_app_key_and_secret_to_buildout
gmail_consumer_key   = add_gmail_app_key_and_secret_to_buildout
gmail_consumer_secret= add_gmail_app_key_and_secret_to_buildout

[velruse_conf]
recipe = collective.recipe.genshi
input = ${buildout:directory}/etc/velruse.ini.in
output = ${buildout:directory}/etc/velruse.ini

[supervisor]
programs +=
    ${buildout:velruse-supervisor}
